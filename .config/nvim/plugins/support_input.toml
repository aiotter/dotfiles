# Emacs keybind in insert mode
[[plugins]]
repo = 'kentarosasaki/vim-emacs-bindings'
on_event = 'InsertEnter'


# Auto-close parentheses
[[plugins]]
repo = 'Raimondi/delimitMate'
on_event = 'InsertEnter'
hook_add = '''
" Avoid conflicting delimitMate with vim-closetag
autocmd FileType html,xhtml,phtml,javascriptreact,typescriptreact let b:delimitMate_matchpairs = "(:),[:],{:}"
'''


# Auto-close HTML tags
[[plugins]]
repo = 'alvan/vim-closetag'
on_event = 'InsertEnter'
on_ft = ['html', 'xhtml', 'phtml', 'javascriptreact', 'typescriptreact']


# Persistent very magic option
# NOTE: Causes problems on inputsecret()
# [[plugins]]
# repo = 'coot/EnchantedVim'
# depends = 'CRDispatcher'
# hook_add = '''
# let g:VeryMagicSubstitute = 1  " (default is 0)
# let g:VeryMagicGlobal = 1  " (default is 0)
# let g:VeryMagicVimGrep = 1  " (default is 0)
# let g:VeryMagicSearchArg = 1  " (default is 0, :edit +/{pattern}))
# let g:VeryMagicFunction = 1  " (default is 0, :fun /{pattern})
# let g:VeryMagicHelpgrep = 1  " (default is 0)
# let g:VeryMagicRange = 1  " (default is 0, search patterns in command ranges)
# let g:VeryMagicEscapeBackslashesInSearchArg = 1  " (default is 0, :edit +/{pattern}))
# let g:SortEditArgs = 1  " (default is 0)
# 
# let g:VeryMagic = 0 " (default is 1)
# set incsearch
# nmap / /\v
# nmap ? ?\v 
# '''

# [[plugins]]
# repo = 'coot/CRDispatcher'


# [[plugins]]
# repo = 'ervandew/supertab'
# on_event = 'InsertEnter'
# hook_add = '''
# let g:SuperTabContextDefaultCompletionType = "context"
# let g:SuperTabDefaultCompletionType = "<c-n>"
# '''


# [[plugins]]
# repo = 'easymotion/vim-easymotion'
# on_event = 'InsertEnter'
# hook_add = '''
# map ; <Plug>(easymotion-prefix)
# '''


[[plugins]]
repo = 'andymass/vim-matchup'


[[plugins]]
repo = 'junegunn/vim-peekaboo'
on_event = 'BufWinEnter'
hook_add = '''
let g:peekaboo_delay = 500
let g:peekaboo_window="call CreateCenteredFloatingWindow()"

function! CreateCenteredFloatingWindow() abort
    if(!has('nvim')) 
        split
        new
    else
        let width = float2nr(&columns * 0.6)
        let height = float2nr(&lines * 0.6)
        let top = ((&lines - height) / 2) - 1
        let left = (&columns - width) / 2
        let opts = {'relative': 'editor', 'row': top, 'col': left, 'width': width, 'height': height, 'style': 'minimal', 'border': 'single', 'noautocmd': 1}
        let s:buf = nvim_create_buf(v:false, v:true)
        call nvim_open_win(s:buf, v:true, opts)
    endif
endfunction
'''
