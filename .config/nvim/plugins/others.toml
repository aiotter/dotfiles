[[plugins]]
repo = 'thinca/vim-quickrun'
depends = 'vimproc'
hook_add = '''
nnoremap <Leader>q :<C-u>QuickRun<CR>

let g:quickrun_config = {
\ "python": {
\   "outputter/quickfix/errorformat": '%C\ %.%#,%A\ \ File\ \"%f\"\\,\ line\ %l%.%#,%Z%[%^\ ]%\\@=%m'
\ },
\ "typescript": { "type": "typescript/deno" },
\ "_": {
\   "runner": "vimproc",
\   "runner/vimproc/updatetime": 60,
\   "outputter": "error",
\   "outputter/error/success": exists('*win_execute') ? 'buffer' : 'buffer_legacy',
\   "outputter/error/error": "quickfix",
\   "outputter/buffer/split": ":botright 8sp",
\   "outputter/buffer/close_on_empty": 1,
\   "hook/time/enable": 1
\ }
\}

" Stop QuickRun by Ctrl-C
nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"

" Close window after original buffer was closed
augroup QuickRunClose
  au!
  au WinEnter * if winnr('$') == 1 && &filetype == "quickrun"|q|endif
augroup END
'''


# Spell check
[[plugins]]
repo = 'kamykn/spelunker.vim'
hook_add = '''
let g:spelunker_check_type = 1
'''


# Required by spelunker (nvim only)
[[plugins]]
repo = 'kamykn/popup-menu.nvim'
if = 'has("nvim")'


[[plugins]]
repo = 'ncm2/float-preview.nvim.git'
if = 'has("nvim")'
hook_add = 'let g:float_preview#docked = 0'


[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'


[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'skanehira/code2img.vim'
hook_add = 'let g:code2img_theme = "monokai"'

[[plugins]]
repo = 'lambdalisue/suda.vim'
hook_add = 'let g:suda_smart_edit = 1'

# [[plugins]]
# repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'
